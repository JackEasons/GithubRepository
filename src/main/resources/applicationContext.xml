<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- 数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="url" value="${jdbc.url}" />
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="maxWait" value="80000" />
        <property name="maxActive" value="20" />
        <property name="maxIdle" value="10" />
        <property name="timeBetweenEvictionRunsMillis" value="900000" />
        <property name="minEvictableIdleTimeMillis" value="1200000" />
    </bean>
    <!-- 配置 Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>com.dfggking.entity</value>
            </list>
        </property>
        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop><!-- 格式化SQL，显示优化 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop><!-- 设置数据库方言 -->
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>
        </property>
    </bean>
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 定义事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" scope="singleton">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
    <!-- 激活@Controller注解模式 -->
    <mvc:annotation-driven />
    
    
    
    <!-- 设置对类的注解进行扫描，创建Bean及自动依赖注入 -->
    <context:component-scan base-package="com.dfggking.common, com.dfggking.cache, com.dfggking.support" />
    <context:component-scan base-package="com.dfggking.sys.controller, com.dfggking.sys.service" />
    <context:component-scan base-package="com.dfggking.web.controller, com.dfggking.web.service" />
    <context:component-scan base-package="com.dfggking.webapp.controller, com.dfggking.webapp.service" />
    
    <!-- 配置事务传播特性 -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> <tx:attributes> <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" /> <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" /> </tx:attributes> </tx:advice> -->
    <!-- 使用AspectJ方式配置AOP -->
    <!-- <aop:aspectj-autoproxy proxy-target-class="true" /> <aop:config proxy-target-class="true"> <aop:advisor pointcut="execution(* com.dfggking.service.*.*(..))" advice-ref="transactionAdvice" /> 配置哪些类的哪些方法参与事务 </aop:config> -->
    <bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- <value>classpath:httpClient.properties</value> -->
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    
    
    
</beans>