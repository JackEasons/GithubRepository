<!-- <?xml version="1.0" encoding="UTF-8"?>


定义连接管理器
    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager" destroy-method="close">
        最大连接数
        <property name="maxTotal" value="${httpClient.maxTotal}" />
        设置每个主机地址的并发数
        <property name="defaultMaxPerRoute" value="${httpClient.defaultMaxPerRoute}" />
    </bean>
    httpclient对象构造器
    <bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder">
        <property name="connectionManager" ref="httpClientConnectionManager" />
    </bean>
    定义httpclient对象
    <bean id="httpClient" class="org.apache.http.impl.client.CloseableHttpClient" factory-bean="httpClientBuilder" factory-method="build" scope="prototype">
    </bean>
    定义请求参数
    <bean id="requestConfig" class="org.apache.http.client.config.RequestConfig" factory-bean="requestConfigBuilder" factory-method="build" />
    轻易清理无效连接线程
    <bean class="com.dfggking.common.httpclient.IdleConnectionEvictor" destroy-method="shutdown">
        <constructor-arg index="0" ref="httpClientConnectionManager"></constructor-arg>
    </bean>
    <bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig.Builder">
        创建连接的最长时间
        <property name="connectTimeout" value="${httpClient.connectTimeout}" />
        从连接池中获取到连接的最长时间
        <property name="connectionRequestTimeout" value="${httpClient.connectionRequestTimeout}" />
        数据传输的最长时间
        <property name="socketTimeout" value="${httpClient.socketTimeout}" />
        提交请求前测试连接是否可用
        <property name="staleConnectionCheckEnabled" value="${httpClient.staleConnectionCheckEnabled}" />
    </bean>
     -->